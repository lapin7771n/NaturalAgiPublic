version: '3.8'
# Custom top-level network
networks:
  neo4j-internal:

services:

  server1:
    # Docker image to be used
    image: ${NEO4J_DOCKER_IMAGE}

    # Hostname
    hostname: server1

    # Service-level network, which specifies the networks, from the list of the top-level networks (in this case only neo4j-internal), that the server will connect to.
    # Adds a network alias (used in neo4j.conf when configuring the discovery members)
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network

    # The ports that will be accessible from outside the container - HTTP (7474) and Bolt (7687).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Passes the following environment variables to the container
    environment:
      - NEO4J_AUTH
      - NEO4J_PLUGINS
      - NEO4J_dbms_memory_transaction_total_max=512M

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 2048M

  nuclio-dashboard:
    
    image: quay.io/nuclio/dashboard:stable-arm64

    hostname: nuclio-dashboard
    container_name: nuclio-dashboard

    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    
    deploy:
      mode: replicated
      replicas: 1

    ports:
      - "8070:8070"
    
    expose:
      - '8070'
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock